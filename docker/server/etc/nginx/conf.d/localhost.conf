log_format compression '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" '
                '$request_time $upstream_response_time $pipe $upstream_cache_status';

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # listen [::]:443 ssl http2 ipv6only=on;
    # listen 443 ssl http2;

    # Redirect all http traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # }

    root /var/www/public_html;
    index index.php index.html;

    access_log /var/www/application/storage/logs/nginx/access.log compression;
    error_log /var/www/application/storage/logs/nginx/error.log;

    server_name localhost;
    server_tokens off;

    charset utf-8;
    sendfile off;

    client_max_body_size 1m;
    client_body_buffer_size 8K;
    client_body_timeout 10s;
    client_header_buffer_size 1k;
    client_header_timeout 5s;
    large_client_header_buffers 2 16k;

    location ~ \.php$ {
        try_files $uri =404;

        include fastcgi_params;

        fastcgi_hide_header X-Powered-By;
        fastcgi_pass_header Set-Cookie:Set-Cookie;
        fastcgi_pass_header Cookie;

        fastcgi_read_timeout 600;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_index index.php;

        fastcgi_buffer_size 128k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_buffers 4 256k;

        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;

        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }

    location ~ /\.ht {
        log_not_found off;
        deny all;
    }

    location ~* \.(webp|svg|svgz|eot|otf|woff|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|tar)$ {
        # http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
        expires 1y;
        add_header Cache-Control public;
        log_not_found off;
        access_log  off;
        error_log off;

        # Some browsers still send conditional-GET requests if there's a
        # Last-Modified header or an ETag header even if they haven't
        # reached the expiry date sent in the Expires header.
        add_header Last-Modified "";
        add_header ETag "";
        break;
    }
}
